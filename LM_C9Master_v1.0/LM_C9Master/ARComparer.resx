<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkMark.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>