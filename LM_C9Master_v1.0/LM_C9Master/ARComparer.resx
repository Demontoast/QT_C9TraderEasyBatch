<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="errorX.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <data name="checkMark.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>