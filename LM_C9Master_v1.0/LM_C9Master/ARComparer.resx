<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkMark.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>